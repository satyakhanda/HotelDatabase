package ui.manager;

import database.DatabaseConnectionHandler;
import model.amenities.Room;

import javax.swing.table.DefaultTableModel;
import java.util.HashMap;
import java.util.List;

public class DisplayRooms extends javax.swing.JFrame {
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel avgNum;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable allRooms;
    private javax.swing.JTable bookedByAll;
    private javax.swing.JTable mostPopular;

    private List<Room> rooms;
    private DatabaseConnectionHandler dbHandler;

    public DisplayRooms(List<Room> roomsForHotel, DatabaseConnectionHandler dbHandler, int hotelID) {
        this.dbHandler = dbHandler;
        this.rooms = roomsForHotel;
        initComponents();
        fillTableAllRooms();
        fillTableBookedByAll();
        fillTableMostPopular();
        getAVGPartySize(hotelID);
    }

    private void getAVGPartySize(int hotelID) {
        HashMap<Integer, Integer> partySizes = dbHandler.averagePartySizePerHotel();
//        if (!partySizes.containsKey(hotelID)) {
//            avgNum.setText(0 + " people");
//        }
        avgNum.setText(partySizes.getOrDefault(hotelID, 0) + " people");

    }

    private void fillTableMostPopular() {
        DefaultTableModel model = (DefaultTableModel) this.mostPopular.getModel();
        model.setRowCount(0);
        List<Room> byAll = dbHandler.mostPopularRooms();
        for (Room curr : byAll) {
            model.addRow(new Object[] {curr.getRoom_num(), curr.getRate()});
        }
    }

    private void fillTableBookedByAll() {
        DefaultTableModel model = (DefaultTableModel) this.bookedByAll.getModel();
        model.setRowCount(0);
        List<Room> byAll = dbHandler.bookedByAll();
        for (Room curr : byAll) {
            model.addRow(new Object[] {curr.getRoom_num(), curr.getRate()});
        }
    }

    //TODO: MANRAJ
    //TODO: Fill JTable with rooms from list
    private void fillTableAllRooms() {
        DefaultTableModel model = (DefaultTableModel) this.allRooms.getModel();
        model.setRowCount(0);
        for (Room curr : rooms) {
            model.addRow(new Object[] {curr.getRoom_num(), curr.getRate()});
        }
    }

    /*
     * To change this license header, choose License Headers in Project Properties.
     * To change this template file, choose Tools | Templates
     * and open the template in the editor.
     */


        /**
         * This method is called from within the constructor to initialize the form.
         * WARNING: Do NOT modify this code. The content of this method is always
         * regenerated by the Form Editor.
         */
        @SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">
        private void initComponents() {

            jScrollPane1 = new javax.swing.JScrollPane();
            allRooms = new javax.swing.JTable();
            jLabel1 = new javax.swing.JLabel();
            jLabel2 = new javax.swing.JLabel();
            jScrollPane2 = new javax.swing.JScrollPane();
            bookedByAll = new javax.swing.JTable();
            jLabel3 = new javax.swing.JLabel();
            avgNum = new javax.swing.JLabel();
            jScrollPane3 = new javax.swing.JScrollPane();
            mostPopular = new javax.swing.JTable();
            jLabel5 = new javax.swing.JLabel();

            setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

            allRooms.setModel(new javax.swing.table.DefaultTableModel(
                    new Object [][] {
                            {null, null},
                            {null, null},
                            {null, null},
                            {null, null}
                    },
                    new String [] {
                            "Number", "Rate ($CAD)"
                    }
            ) {
                Class[] types = new Class [] {
                        java.lang.Integer.class, java.lang.Integer.class
                };

                public Class getColumnClass(int columnIndex) {
                    return types [columnIndex];
                }
            });
            jScrollPane1.setViewportView(allRooms);

            jLabel1.setText("All Rooms:");

            jLabel2.setText("Rooms Booked By All Customers:");

            bookedByAll.setModel(new javax.swing.table.DefaultTableModel(
                    new Object [][] {
                            {null, null},
                            {null, null},
                            {null, null},
                            {null, null}
                    },
                    new String [] {
                            "Number", "Rate ($CAD)"
                    }
            ) {
                Class[] types = new Class [] {
                        java.lang.Integer.class, java.lang.Integer.class
                };

                public Class getColumnClass(int columnIndex) {
                    return types [columnIndex];
                }
            });
            jScrollPane2.setViewportView(bookedByAll);

            jLabel3.setText("Your Hotel's Average Party Size:");

            avgNum.setText(" people");

            mostPopular.setModel(new javax.swing.table.DefaultTableModel(
                    new Object [][] {
                            {null, null},
                            {null, null},
                            {null, null},
                            {null, null}
                    },
                    new String [] {
                            "Number", "Rate ($CAD)"
                    }
            ) {
                Class[] types = new Class [] {
                        java.lang.Integer.class, java.lang.Integer.class
                };

                public Class getColumnClass(int columnIndex) {
                    return types [columnIndex];
                }
            });
            jScrollPane3.setViewportView(mostPopular);

            jLabel5.setText("Most Popular Rooms:");

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(jLabel1)
                                                    .addComponent(jLabel2)
                                                    .addComponent(jScrollPane2)
                                                    .addComponent(jScrollPane1)
                                                    .addComponent(jScrollPane3)
                                                    .addGroup(layout.createSequentialGroup()
                                                            .addComponent(jLabel3)
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                            .addComponent(avgNum))))
                                    .addGap(10, 10, 10))
            );
            layout.setVerticalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                    .addGap(11, 11, 11)
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel5)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel3)
                                            .addComponent(avgNum))
                                    .addGap(19, 19, 19))
            );

            pack();
        }// </editor-fold>



//    /**
//     * This method is called from within the constructor to initialize the form.
//     * WARNING: Do NOT modify this code. The content of this method is always
//     * regenerated by the Form Editor.
//     */
//    @SuppressWarnings("unchecked")
//    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
//    private void initComponents() {
//
//        jScrollPane1 = new javax.swing.JScrollPane();
//        allRooms = new javax.swing.JTable();
//        jLabel1 = new javax.swing.JLabel();
//        jLabel2 = new javax.swing.JLabel();
//        jScrollPane2 = new javax.swing.JScrollPane();
//        bookedByAll = new javax.swing.JTable();
//        jLabel3 = new javax.swing.JLabel();
//        avgNum = new javax.swing.JLabel();
//
//        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
//
//        allRooms.setModel(new javax.swing.table.DefaultTableModel(
//            new Object [][] {
//                {null, null},
//                {null, null},
//                {null, null},
//                {null, null}
//            },
//            new String [] {
//                "Number", "Rate"
//            }
//        ) {
//            Class[] types = new Class [] {
//                java.lang.Integer.class, java.lang.Integer.class
//            };
//
//            public Class getColumnClass(int columnIndex) {
//                return types [columnIndex];
//            }
//        });
//        jScrollPane1.setViewportView(allRooms);
//
//        jLabel1.setText("All Rooms:");
//
//        jLabel2.setText("Rooms Booked By All Customers:");
//
//        bookedByAll.setModel(new javax.swing.table.DefaultTableModel(
//            new Object [][] {
//                {null, null},
//                {null, null},
//                {null, null},
//                {null, null}
//            },
//            new String [] {
//                "Number", "Rate"
//            }
//        ) {
//            Class[] types = new Class [] {
//                java.lang.Integer.class, java.lang.Integer.class
//            };
//
//            public Class getColumnClass(int columnIndex) {
//                return types [columnIndex];
//            }
//        });
//        jScrollPane2.setViewportView(bookedByAll);
//
//        jLabel3.setText("Your Hotel's Average Party Size:");
//
//        avgNum.setText(" people");
//
//        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
//        getContentPane().setLayout(layout);
//        layout.setHorizontalGroup(
//            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(layout.createSequentialGroup()
//                .addContainerGap()
//                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
//                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 377, Short.MAX_VALUE)
//                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
//                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
//                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING))
//                    .addGroup(layout.createSequentialGroup()
//                        .addComponent(jLabel3)
//                        .addGap(18, 18, 18)
//                        .addComponent(avgNum)))
//                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
//        );
//        layout.setVerticalGroup(
//            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGroup(layout.createSequentialGroup()
//                .addGap(11, 11, 11)
//                .addComponent(jLabel1)
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
//                .addComponent(jLabel2)
//                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
//                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
//                .addGap(26, 26, 26)
//                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
//                    .addComponent(jLabel3)
//                    .addComponent(avgNum))
//                .addContainerGap(28, Short.MAX_VALUE))
//        );
//
//        pack();
//    }// </editor-fold>//GEN-END:initComponents

}
